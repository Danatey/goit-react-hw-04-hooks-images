{"version":3,"sources":["Components/API/API.js","Components/Modal/Modal.jsx","Components/Searchbar/Searchbar.jsx","Components/Loader/Loader.jsx","Components/ImageGalleryItem/ImageGalleryItem.jsx","Components/ImageGallery/ImageGallery.jsx","Components/Button/Button.jsx","App.js","index.js"],"names":["BASE_URL","KEY","getAPI","search","currPage","url","axios","get","modalRoot","document","querySelector","Modal","handleKeyDown","event","code","props","onClose","onBackdropClick","currentTarget","target","window","addEventListener","this","removeEventListener","createPortal","className","onClick","children","Component","Searchbar","state","handleChange","setState","value","handleSubmit","preventDefault","console","log","onSubmit","reset","type","autoComplete","autoFocus","placeholder","onChange","prtpTypes","PropTypes","string","LoaderComp","variant","disabled","color","height","width","timeout","ImageGalleryItem","images","map","id","webformatURL","largeImageURL","src","alt","ImageGallery","Button","App","showModal","bigImageUrl","imageStatus","onSearchHandle","query","currentPage","fetchImages","isLoading","then","response","filteredData","data","hits","hit","prevState","finally","scrollTo","top","documentElement","scrollHeight","behavior","onImageClick","toggleModal","onImageLoaded","prevProps","showButton","length","Loader","onLoad","ReactDOM","render","StrictMode","getElementById"],"mappings":"0QAEMA,EAAW,0BACXC,EAAM,qCAOGC,EALA,SAACC,GAA0B,IAAlBC,EAAiB,uDAAN,EAC3BC,EAAG,UAAML,EAAN,eAAqBG,EAArB,iBAAoCC,EAApC,gBAAoDH,EAApD,wDACT,OAAOK,IAAMC,IAAIF,I,OCJbG,EAAYC,SAASC,cAAc,eAgC1BC,E,4MAtBbC,cAAgB,SAAAC,GACK,WAAfA,EAAMC,MACR,EAAKC,MAAMC,W,EAIfC,gBAAkB,SAAAJ,GACZA,EAAMK,gBAAkBL,EAAMM,QAChC,EAAKJ,MAAMC,W,uDAhBf,WACEI,OAAOC,iBAAiB,UAAWC,KAAKV,iB,kCAG1C,WACEQ,OAAOG,oBAAoB,UAAWD,KAAKV,iB,oBAe7C,WACE,OAAOY,uBACL,qBAAKC,UAAU,UAAUC,QAASJ,KAAKL,gBAAvC,SACE,qBAAKQ,UAAU,QAAf,SAAwBH,KAAKP,MAAMY,aAErCnB,O,GA1BcoB,a,gBCAdC,E,4MAIFC,MAAQ,CACJ3B,OAAQ,I,EAGZ4B,aAAe,SAAAlB,GACf,EAAKmB,SAAS,CAAE7B,OAAQU,EAAMK,cAAce,S,EAG5CC,aAAe,SAAArB,GACXA,EAAMsB,iBACNC,QAAQC,IAAR,wBAA6B,EAAKP,MAAM3B,SAGxC,EAAKY,MAAMuB,SAAS,EAAKR,MAAM3B,QAC/B,EAAKoC,S,EAGTA,MAAQ,WACJ,EAAKP,SAAS,CAAE7B,OAAQ,M,4CAG5B,WACI,IAAQA,EAAWmB,KAAKQ,MAAhB3B,OAER,OAAO,wBAAQsB,UAAU,YAAlB,SACN,uBAAMA,UAAU,aAAaa,SAAYhB,KAAKY,aAA9C,UACI,wBAAQM,KAAK,SAASf,UAAU,oBAAhC,SACG,sBAAMA,UAAU,0BAAhB,sBAGH,uBACDA,UAAU,mBACVe,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,2BACZV,MAAO9B,EACPyC,SAAUtB,KAAKS,wB,GAzCHH,aAAlBC,EACKgB,UAAY,CACf1C,OAAQ2C,IAAUC,QAgDXlB,Q,iBCtCAmB,G,MAZI,kBACjB,wBAAQvB,UAAU,SAASwB,QAAQ,UAAUC,UAAQ,EAArD,SACE,cAAC,IAAD,CACIV,KAAK,OACLW,MAAM,UACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,UCMFC,EAjBU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,OAAQ9B,EAAc,EAAdA,QAChC,OAAO,mCACN8B,EAAOC,KAAI,YAA0C,IAAvCC,EAAsC,EAAtCA,GAAIC,EAAkC,EAAlCA,aAAcC,EAAoB,EAApBA,cAC/B,OACE,oBAAanC,UAAU,mBAAvB,SACE,qBACEC,QAAS,kBAAMA,EAAQkC,IACvBC,IAAKF,EACLG,IAAI,GACJrC,UAAU,4BALLiC,SCUFK,EAVM,SAAC,GAAuB,IAAtBP,EAAqB,EAArBA,OAAQ9B,EAAa,EAAbA,QAC3B,OAAO,oBAAID,UAAU,eAAd,SACH,cAAC,EAAD,CAAkB+B,OAAQA,EAAQ9B,QAASA,OCMpCsC,EAVA,SAAC,GAAD,IAAGtC,EAAH,EAAGA,QAAH,OACb,wBAAQc,KAAK,SAASf,UAAU,SAASC,QAASA,EAAlD,wBC8GauC,E,4MAtGbnC,MAAQ,CACN0B,OAAQ,GACRpD,SAAU,EACVD,OAAQ,GACR+D,WAAW,EACXC,YAAa,GACbC,YAAa,W,EAGfC,eAAiB,SAACC,GAChB,EAAKtC,SAAS,CACZ7B,OAAQmE,EACRC,YAAa,EACbf,OAAQ,M,EAKZgB,YAAc,WACZ,MAA6B,EAAK1C,MAA1B1B,EAAR,EAAQA,SAAUD,EAAlB,EAAkBA,OAElB,EAAK6B,SAAS,CAAEyC,WAAW,IAE3BvE,EAAOC,EAAQC,GACZsE,MAAK,SAACC,GACL,IAAMC,EAAeD,EAASE,KAAKC,KAAKrB,KAAI,SAACsB,GAC3C,MAAO,CACLrB,GAAIqB,EAAIrB,GACRC,aAAcoB,EAAIpB,aAClBC,cAAemB,EAAInB,kBAIvB,EAAK5B,UAAS,SAACgD,GAAD,MAAgB,CAC5BxB,OAAO,GAAD,mBAAMwB,EAAUxB,QAAhB,YAA2BoB,IACjCxE,SAAU4E,EAAU5E,SAAW,SAGlC6E,SAAQ,WAOP,OANI,EAAKnD,MAAM1B,SAAW,GACxBgB,OAAO8D,SAAS,CACdC,IAAK1E,SAAS2E,gBAAgBC,aAC9BC,SAAU,WAGP,EAAKtD,SAAS,CAAEyC,WAAW,Q,EAIxCc,aAAe,SAAClF,GACd,EAAK2B,SAAS,CAAEmC,YAAa9D,IAC7B,EAAKmF,cACL,EAAKxD,SAAS,CAAEoC,YAAa,a,EAG/BoB,YAAc,WACZ,EAAKxD,UAAS,kBAAoB,CAChCkC,WADY,EAAGA,e,EAKnBuB,cAAgB,WACd,EAAKzD,SAAS,CAAEoC,YAAa,Y,wDAO/B,SAAmBsB,EAAWV,GACxBA,EAAU7E,SAAWmB,KAAKQ,MAAM3B,QAClCmB,KAAKkD,gB,oBAIT,WACE,MACElD,KAAKQ,MADC0B,EAAR,EAAQA,OAAQU,EAAhB,EAAgBA,UAAWO,EAA3B,EAA2BA,UAAWN,EAAtC,EAAsCA,YAAaC,EAAnD,EAAmDA,YAG7CuB,EAAanC,EAAOoC,OAAS,IAAMnB,EAEzC,OACE,qCACGP,GACC,eAAC,EAAD,CAAOlD,QAASM,KAAKkE,YAArB,UACmB,YAAhBpB,GAA6B,cAACyB,EAAD,IAC9B,qBAAKhC,IAAKM,EAAaL,IAAI,GAAGgC,OAAQxE,KAAKmE,mBAI/C,cAAC,EAAD,CAAWnD,SAAUhB,KAAK+C,iBAC1B,cAAC,EAAD,CAAcb,OAAQA,EAAQ9B,QAASJ,KAAKiE,eAC3CI,GACC,qBAAKlE,UAAU,YAAf,SACE,cAAC,EAAD,CAAQC,QAASJ,KAAKkD,YAAaC,UAAWA,a,GA/FxC7C,a,MCJlBmE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFxF,SAASyF,eAAe,W","file":"static/js/main.90d0ed9c.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst BASE_URL = \"https://pixabay.com/api\";\r\nconst KEY = \"21923762-625ed23d6fd96f8b8b3fcd755\";\r\n\r\nconst getAPI = (search, currPage = 1) => {\r\n  const url = `${BASE_URL}/?q=${search}&page=${currPage}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`;\r\n  return axios.get(url);\r\n};\r\n\r\nexport default getAPI;\r\n","import { Component } from 'react'\r\nimport { createPortal } from 'react-dom';\r\n \r\nconst modalRoot = document.querySelector('#modal-root');\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = event => {\r\n    if (event.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  onBackdropClick = event => {\r\n    if (event.currentTarget === event.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.onBackdropClick}>\r\n        <div className=\"Modal\">{this.props.children}</div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;","import PropTypes from 'prop-types'; \r\n\r\nimport { Component } from 'react'\r\n\r\nclass Searchbar extends Component {\r\n    static prtpTypes = {\r\n        search: PropTypes.string\r\n    }\r\n    state = {\r\n        search: '',\r\n    }\r\n\r\n    handleChange = event => {\r\n    this.setState({ search: event.currentTarget.value });\r\n  };\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        console.log(`Signed up as: ${this.state.search}`);\r\n\r\n        // Проп который передается форме для вызова при сабмите\r\n        this.props.onSubmit(this.state.search);\r\n        this.reset();\r\n    };\r\n\r\n    reset = () => {\r\n        this.setState({ search: '', });\r\n    }\r\n\r\n    render() {\r\n        const { search } = this.state;\r\n\r\n        return <header className=\"Searchbar\">\r\n         <form className=\"SearchForm\" onSubmit = {this.handleSubmit}>\r\n             <button type=\"submit\" className=\"SearchForm-button\">\r\n                <span className=\"SearchForm-button-label\">Search</span>\r\n             </button>\r\n\r\n             <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            value={search}\r\n            onChange={this.handleChange}\r\n            />\r\n        </form>\r\n    </header>\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Searchbar","import Loader from \"react-loader-spinner\";\r\n\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nconst LoaderComp = () => (\r\n  <button className=\"Loader\" variant=\"primary\" disabled>\r\n    <Loader\r\n        type=\"Puff\"\r\n        color=\"#00BFFF\"\r\n        height={100}\r\n        width={100}\r\n        timeout={3000} //3 secs\r\n      />\r\n  </button>\r\n);\r\n\r\nexport default LoaderComp;","const ImageGalleryItem = ({ images, onClick }) => {\r\n    return <>\r\n    {images.map(({ id, webformatURL, largeImageURL }) => {\r\n      return (\r\n        <li key={id} className=\"ImageGalleryItem\">\r\n          <img\r\n            onClick={() => onClick(largeImageURL)}\r\n            src={webformatURL}\r\n            alt=\"\"\r\n            className=\"ImageGalleryItem-image\"\r\n          />\r\n        </li>\r\n      );\r\n    })}\r\n  </>\r\n}\r\n\r\nexport default ImageGalleryItem","import PropTypes from 'prop-types';\r\n\r\nimport ImageGalleryItem from \"../ImageGalleryItem\"\r\n\r\nconst ImageGallery = ({images, onClick}) => {\r\n    return <ul className=\"ImageGallery\">\r\n        <ImageGalleryItem images={images} onClick={onClick}/>\r\n    </ul>\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default ImageGallery","import PropTypes from 'prop-types';\r\n\r\nconst Button = ({ onClick }) => (\r\n  <button type=\"button\" className=\"Button\" onClick={onClick}>\r\n    Load more\r\n  </button>\r\n);\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nexport default Button;","import { Component } from \"react\";\nimport axios from \"axios\";\n\nimport getAPI from \"./Components/API/API\";\nimport Modal from \"./Components/Modal\";\nimport Searchbar from \"./Components/Searchbar\";\nimport Loader from \"./Components/Loader\";\nimport ImageGallery from \"./Components/ImageGallery/ImageGallery\";\nimport Button from \"./Components/Button\";\n\nclass App extends Component {\n  state = {\n    images: [],\n    currPage: 1,\n    search: \"\",\n    showModal: false,\n    bigImageUrl: \"\",\n    imageStatus: \"loading\",\n  };\n\n  onSearchHandle = (query) => {\n    this.setState({\n      search: query,\n      currentPage: 1,\n      images: [],\n    });\n    // console.log(this.state);\n  };\n\n  fetchImages = () => {\n    const { currPage, search } = this.state;\n\n    this.setState({ isLoading: true });\n\n    getAPI(search, currPage)\n      .then((response) => {\n        const filteredData = response.data.hits.map((hit) => {\n          return {\n            id: hit.id,\n            webformatURL: hit.webformatURL,\n            largeImageURL: hit.largeImageURL,\n          };\n        });\n\n        this.setState((prevState) => ({\n          images: [...prevState.images, ...filteredData],\n          currPage: prevState.currPage + 1,\n        }));\n      })\n      .finally(() => {\n        if (this.state.currPage > 2) {\n          window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: \"smooth\",\n          });\n        }\n        return this.setState({ isLoading: false });\n      });\n  };\n\n  onImageClick = (url) => {\n    this.setState({ bigImageUrl: url });\n    this.toggleModal();\n    this.setState({ imageStatus: \"loading\" });\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  onImageLoaded = () => {\n    this.setState({ imageStatus: \"loaded\" });\n  };\n\n  // componentDidMount() {\n  //   this.fetchImages();\n  // }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.search !== this.state.search) {\n      this.fetchImages();\n    }\n  }\n\n  render() {\n    const { images, showModal, isLoading, bigImageUrl, imageStatus } =\n      this.state;\n\n    const showButton = images.length > 0 && !isLoading;\n\n    return (\n      <>\n        {showModal && (\n          <Modal onClose={this.toggleModal}>\n            {imageStatus === \"loading\" && <Loader />}\n            <img src={bigImageUrl} alt=\"\" onLoad={this.onImageLoaded} />\n          </Modal>\n        )}\n\n        <Searchbar onSubmit={this.onSearchHandle} />\n        <ImageGallery images={images} onClick={this.onImageClick} />\n        {showButton && (\n          <div className=\"container\">\n            <Button onClick={this.fetchImages} isLoading={isLoading} />\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}